spring.application.name=bookstack

# Database configuration using environment variables
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

# JPA Configuration (from environment)
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:false}
spring.jpa.defer-datasource-initialization=${SPRING_JPA_DEFER_DATASOURCE_INITIALIZATION:false}
spring.sql.init.mode=${SPRING_SQL_INIT_MODE:never}
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.format_sql=${SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL:false}

# Logging Configuration (from environment)
logging.level.org.hibernate.SQL=${LOGGING_LEVEL_ORG_HIBERNATE_SQL:WARN}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=${LOGGING_LEVEL_ORG_HIBERNATE_TYPE_DESCRIPTOR_SQL_BASICBINDER:WARN}

# Profile configuration
spring.profiles.active=${ACTIVE_PROFILE:dev}

# DevTools configuration (from environment)
spring.devtools.restart.enabled=${SPRING_DEVTOOLS_RESTART_ENABLED:true}
spring.devtools.livereload.enabled=${SPRING_DEVTOOLS_LIVERELOAD_ENABLED:true}

# GraphQL configuration
spring.graphql.http.path=/api/graphql
spring.graphql.graphiql.path=/api/graphiql

# CORS Configuration
spring.web.cors.allowed-origins=http://localhost:3000,http://127.0.0.1:3000,http://frontend:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=Authorization,Content-Type,X-Requested-With,Accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers
spring.web.cors.exposed-headers=Authorization
spring.web.cors.allow-credentials=true
spring.web.cors.max-age=3600

# Rate Limiting Configuration
rate.limit.enabled=true
rate.limit.requests-per-minute=20

# JWT Configuration (from environment)
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION}

# Custom application configuration
app.load-mock-data=${LOAD_MOCK_DATA:false}