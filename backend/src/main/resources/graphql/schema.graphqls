# src/main/resources/graphql/schema.graphqls

type Query {
    # Book queries
    allBooks: [Book!]!
    bookById(id: ID!): Book
    searchBooks(title: String, author: String, category: String): [Book!]!
    
    # User queries
    allUsers: [User!]!
    userById(id: ID!): User
    userByUsername(username: String!): User
    searchUsersByUsername(username: String!): [User!]!
    usersByRole(role: String!): [User!]!
}

type Mutation {
    # Book mutations
    addBook(input: BookInput!): Book!
    updateBook(id: ID!, input: BookInput!): Book!
    deleteBook(id: ID!): Boolean!
    
    # User mutations
    addUser(input: UserInput!): User!
    updateUser(id: ID!, input: UserInput!): User!
    updateUserRole(id: ID!, role: String!): User!
    updateUserPassword(id: ID!, password: String!): User!
    deleteUser(id: ID!): Boolean!
}

type Book {
    id: ID!
    title: String!
    author: String!
    isbn: String!
    category: String
    language: String
    totalCopies: Int!
    availableCopies: Int!
}

type User {
    id: ID!
    username: String!
    role: String!
    createdAt: String
}

input BookInput {
    title: String!
    author: String!
    isbn: String!
    category: String
    language: String
    totalCopies: Int!
    availableCopies: Int!
}

input UserInput {
    username: String!
    password: String!
    role: String!
}